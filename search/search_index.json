{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"../../README.md","title":"Home"},{"location":"#readmemd","text":"","title":"../../README.md"},{"location":"v5/installation/composer/","text":"Composer Installation of Packages Install dependencies composer install Development mode If you're installing the project for development, make sure you have development mode enabled, by running: composer development-enable You can disable development mode by running: composer development-disable You can check if you have development mode enabled by running: composer development-status","title":"Composer"},{"location":"v5/installation/composer/#composer-installation-of-packages","text":"","title":"Composer Installation of Packages"},{"location":"v5/installation/composer/#install-dependencies","text":"composer install","title":"Install dependencies"},{"location":"v5/installation/composer/#development-mode","text":"If you're installing the project for development, make sure you have development mode enabled, by running: composer development-enable You can disable development mode by running: composer development-disable You can check if you have development mode enabled by running: composer development-status","title":"Development mode"},{"location":"v5/installation/configuration-files/","text":"Configuration Files Prepare config files duplicate config/autoload/local.php.dist as config/autoload/local.php duplicate config/autoload/mail.local.php.dist as config/autoload/mail.local.php Note if your Admin will send emails, make sure to fill in SMTP connection params optional : in order to run/create tests, duplicate config/autoload/local.test.php.dist as config/autoload/local.test.php Note this creates a new in-memory database that your tests will run on.","title":"Configuration Files"},{"location":"v5/installation/configuration-files/#configuration-files","text":"","title":"Configuration Files"},{"location":"v5/installation/configuration-files/#prepare-config-files","text":"duplicate config/autoload/local.php.dist as config/autoload/local.php duplicate config/autoload/mail.local.php.dist as config/autoload/mail.local.php","title":"Prepare config files"},{"location":"v5/installation/doctrine-orm/","text":"Doctrine ORM Setup database Make sure you fill out the database credentials in config/autoload/local.php under $databases['default'] . Create a new MySQL database - set collation to utf8mb4_general_ci Running migrations Run the database migrations by using the following command: php bin/doctrine-migrations migrate This command will prompt you to confirm that you want to run it. WARNING! You are about to execute a migration in database \"...\" that could result in schema changes and data loss. Are you sure you wish to continue? (yes/no) [yes]: Hit Enter to confirm the operation. Executing fixtures Fixtures are used to seed the database with initial values and should be executed after migrating the database. To list all the fixtures, run: php bin/doctrine fixtures:list This will output all the fixtures in the order of execution. To execute all fixtures, run: php bin/doctrine fixtures:execute To execute a specific fixture, run: php bin/doctrine fixtures:execute --class=FixtureClassName More details on how fixtures work can be found here: https://github.com/dotkernel/dot-data-fixtures#creating-fixtures","title":"Doctrine ORM"},{"location":"v5/installation/doctrine-orm/#doctrine-orm","text":"","title":"Doctrine ORM"},{"location":"v5/installation/doctrine-orm/#setup-database","text":"Make sure you fill out the database credentials in config/autoload/local.php under $databases['default'] . Create a new MySQL database - set collation to utf8mb4_general_ci","title":"Setup database"},{"location":"v5/installation/doctrine-orm/#running-migrations","text":"Run the database migrations by using the following command: php bin/doctrine-migrations migrate This command will prompt you to confirm that you want to run it. WARNING! You are about to execute a migration in database \"...\" that could result in schema changes and data loss. Are you sure you wish to continue? (yes/no) [yes]: Hit Enter to confirm the operation.","title":"Running migrations"},{"location":"v5/installation/doctrine-orm/#executing-fixtures","text":"Fixtures are used to seed the database with initial values and should be executed after migrating the database. To list all the fixtures, run: php bin/doctrine fixtures:list This will output all the fixtures in the order of execution. To execute all fixtures, run: php bin/doctrine fixtures:execute To execute a specific fixture, run: php bin/doctrine fixtures:execute --class=FixtureClassName More details on how fixtures work can be found here: https://github.com/dotkernel/dot-data-fixtures#creating-fixtures","title":"Executing fixtures"},{"location":"v5/installation/getting-started/","text":"Clone the project Recommended development environment If you are using Windows as OS on your machine, you can use WSL2 as development environment. Read more here: PHP-Mariadb-on-WLS2 Using your terminal, navigate inside the directory you want to download the project files into. Make sure that the directory is empty before proceeding to the download process. Once there, run the following command: git clone https://github.com/dotkernel/admin.git .","title":"Getting Started"},{"location":"v5/installation/getting-started/#clone-the-project","text":"","title":"Clone the project"},{"location":"v5/installation/getting-started/#recommended-development-environment","text":"If you are using Windows as OS on your machine, you can use WSL2 as development environment. Read more here: PHP-Mariadb-on-WLS2 Using your terminal, navigate inside the directory you want to download the project files into. Make sure that the directory is empty before proceeding to the download process. Once there, run the following command: git clone https://github.com/dotkernel/admin.git .","title":"Recommended development environment"},{"location":"v5/installation/manage-geolite2/","text":"Manage GeoLite2 database You can download/update a specific GeoLite2 database, by running the following command: php bin/cli.php geoip:synchronize -d {DATABASE} Where {DATABASE} takes one of the following values: asn , city , country . You can download/update all GeoLite2 databases at once, by running the following command: php bin/cli.php geoip:synchronize The output should be similar to the below, displaying per row: database identifier : previous build datetime -&gt; current build datetime . asn: n/a -&gt; 2021-07-01 02:09:34 city: n/a -&gt; 2021-07-01 02:09:20 country: n/a -&gt; 2021-07-01 02:05:12 Get help for this command by running: php bin/cli.php help geoip:synchronize Tip : If you setup the synchronizer command as a cronjob, you can add the -q|--quiet option, and it will output data only if an error has occurred.","title":"Manage Geolite2"},{"location":"v5/installation/manage-geolite2/#manage-geolite2-database","text":"You can download/update a specific GeoLite2 database, by running the following command: php bin/cli.php geoip:synchronize -d {DATABASE} Where {DATABASE} takes one of the following values: asn , city , country . You can download/update all GeoLite2 databases at once, by running the following command: php bin/cli.php geoip:synchronize The output should be similar to the below, displaying per row: database identifier : previous build datetime -&gt; current build datetime . asn: n/a -&gt; 2021-07-01 02:09:34 city: n/a -&gt; 2021-07-01 02:09:20 country: n/a -&gt; 2021-07-01 02:05:12 Get help for this command by running: php bin/cli.php help geoip:synchronize Tip : If you setup the synchronizer command as a cronjob, you can add the -q|--quiet option, and it will output data only if an error has occurred.","title":"Manage GeoLite2 database"},{"location":"v5/installation/test-the-installation/","text":"Testing (Running) Note: Do not enable dev mode in production Run the following command in your project's directory to start PHPs built-in server: php -S 0.0.0.0:8080 -t public Running command composer serve will do the exact same, but the above is faster. 0.0.0.0 means that the server is open to all incoming connections 127.0.0.1 means that the server can only be accessed locally (localhost only) 8080 the port on which the server is started (the listening port for the server) NOTE: If you are still getting exceptions or errors regarding some missing services, try running the following command php bin/clear-config-cache.php If config-cache.php is present that config will be loaded regardless of the ConfigAggregator::ENABLE_CACHE in config/autoload/mezzio.global.php Open a web browser and visit http://localhost:8080/ You should see the DotKernel admin login page. If you ran the migrations you will have an admin user in the database with the following credentials: User : admin Password : dotadmin NOTE: Production only : Make sure you modify the default admin credentials. Development only : session.cookie_secure does not work locally so make sure you modify your local.php , as per the following: return [ 'session_config' =&gt; [ 'cookie_secure' =&gt; false, ] ]; Do not change this in local.php.dist as well because this value should remain true on production.","title":"Test the Installation"},{"location":"v5/installation/test-the-installation/#testing-running","text":"Note: Do not enable dev mode in production Run the following command in your project's directory to start PHPs built-in server: php -S 0.0.0.0:8080 -t public Running command composer serve will do the exact same, but the above is faster. 0.0.0.0 means that the server is open to all incoming connections 127.0.0.1 means that the server can only be accessed locally (localhost only) 8080 the port on which the server is started (the listening port for the server) NOTE: If you are still getting exceptions or errors regarding some missing services, try running the following command php bin/clear-config-cache.php If config-cache.php is present that config will be loaded regardless of the ConfigAggregator::ENABLE_CACHE in config/autoload/mezzio.global.php Open a web browser and visit http://localhost:8080/ You should see the DotKernel admin login page. If you ran the migrations you will have an admin user in the database with the following credentials: User : admin Password : dotadmin NOTE: Production only : Make sure you modify the default admin credentials. Development only : session.cookie_secure does not work locally so make sure you modify your local.php , as per the following: return [ 'session_config' =&gt; [ 'cookie_secure' =&gt; false, ] ]; Do not change this in local.php.dist as well because this value should remain true on production.","title":"Testing (Running)"},{"location":"v5/introduction/introduction/","text":"Introduction DotKernel web starter package suitable for admin applications.","title":"Introduction"},{"location":"v5/introduction/introduction/#introduction","text":"DotKernel web starter package suitable for admin applications.","title":"Introduction"},{"location":"v5/introduction/server-requirements/","text":"Server Requirements For production, we highly recommend a *nix based system. Webserver Apache &gt;= 2.2 or Nginx mod_rewrite .htaccess support (AllowOverride All) PHP &gt;= 8.2 Both mod_php and FCGI (FPM) are supported. Required Settings and Modules &amp; Extensions memory_limit &gt;= 128M upload_max_filesize and post_max_size &gt;= 100M (depending on your data) mbstring CLI SAPI (for Cron Jobs) Composer (added to $PATH) RDBMS MariaDB &gt;= 10.11 LTS Recommended extensions opcache pdo_mysql or mysqli (if using MySQL or MariaDB as RDBMS) dom - if working with markup files structure (html, xml, etc) simplexml - working with xml files gd, exif - if working with images zlib, zip, bz2 - if compessing files curl (required if APIs are used) sqlite3 - for tests","title":"Server Requirements"},{"location":"v5/introduction/server-requirements/#server-requirements","text":"For production, we highly recommend a *nix based system.","title":"Server Requirements"},{"location":"v5/introduction/server-requirements/#webserver","text":"Apache &gt;= 2.2 or Nginx mod_rewrite .htaccess support (AllowOverride All)","title":"Webserver"},{"location":"v5/introduction/server-requirements/#php-82","text":"Both mod_php and FCGI (FPM) are supported.","title":"PHP &gt;= 8.2"},{"location":"v5/introduction/server-requirements/#required-settings-and-modules-extensions","text":"memory_limit &gt;= 128M upload_max_filesize and post_max_size &gt;= 100M (depending on your data) mbstring CLI SAPI (for Cron Jobs) Composer (added to $PATH)","title":"Required Settings and Modules &amp; Extensions"},{"location":"v5/introduction/server-requirements/#rdbms","text":"MariaDB &gt;= 10.11 LTS","title":"RDBMS"},{"location":"v5/introduction/server-requirements/#recommended-extensions","text":"opcache pdo_mysql or mysqli (if using MySQL or MariaDB as RDBMS) dom - if working with markup files structure (html, xml, etc) simplexml - working with xml files gd, exif - if working with images zlib, zip, bz2 - if compessing files curl (required if APIs are used) sqlite3 - for tests","title":"Recommended extensions"}]}